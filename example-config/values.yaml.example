# IllumiDesk configuration values
# --------------------
# Create and use roles and service accounts on an RBAC enabled cluster.
rbac:
    enabled: true
  
jupyterhub:

  proxy:
    secretToken: ''
    service:
      type: LoadBalancer
  # use this if you are going to allow efs enabled
  # singleuser:
  #   extraEnv:
  #     CHOWN_HOME: 'yes'
  #     Editor: vim
  #   fsGid: 0
  #   uid: 0
  #   image:
  #     name: illumidesk/base-notebook
  #     tag: latest
  #   cmd: start-singleuser.sh
  #   storage:
  #     type: static
  #     static:
  #       pvcName: jhub-shared-volume
  #       subPath: home/{username}

jupyterhub:

  proxy:
    secretToken: cde97ffdfca6a5d97daea038b1dcd70a02677f4d5b5eabd3da0d6c247e60c0f2


albIngressController:
  enabled: false
  enableIRSA: false
  awsAccessKey: ''
  awsSecretToken: ''
  clusterName: ''
  clusterVPC: ''
  awsRegion: ''
  host: ''
  serviceAccount:
    annotations: 
      eks.amazonaws.com/role-arn: arn:aws:iam::860100747351:role/eks-irsa-alb-ingress-controller
  ingress:
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/subnets: []
      alb.ingress.kubernetes.io/tags: {}
      alb.ingress.kubernetes.io/certificate-arn: ''
allowEFS:
  enabled: false
  efs: fs-ec8b0394.efs.us-east-2.amazon.aws.com
  orgName: 'apple'
allowExternalDNS:
  enabled: true
  enableIRSA: false
  domainFilter: illumidesk.com
  txtOwnerID: illumidesk
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::860100747351:role/eks-irsa-external-dns
nginxIngressController:
  enabled: true
  host: applehub.illumidesk.com
  certificateArn: arn:aws:acm:us-east-2:860100747351:certificate/834fc25f-3c6c-42ea-b21c-49349b657b83
  vpc_cidr: 192.168.0.0/16

