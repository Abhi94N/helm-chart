{{ if .Values.albIngressController.enabled }}


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: alb-ingress-controller
  name: alb-ingress-controller-{{.Release.Name}}
rules:
  - apiGroups:
      - ""
      - extensions
    resources:
      - configmaps
      - endpoints
      - events
      - ingresses
      - ingresses/status
      - services
      - pods/status
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
  - apiGroups:
      - ""
      - extensions
    resources:
      - nodes
      - pods
      - secrets
      - services
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: alb-ingress-controller
  name: alb-ingress-controller-{{.Release.Name}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alb-ingress-controller-{{.Release.Name}}
subjects:
  - kind: ServiceAccount
    name: alb-ingress-controller
    namespace: {{ .Release.Namespace }}
---
#if you are not using eksctl you create the cluster role
<<<<<<< HEAD:illumidesk/templates/alb-rbac-role.yaml
{{ if .Values.albIngressController.enableIRSA }}
=======
{{ if .Values.alb_ingress_controller.enable_irsa }}
>>>>>>> 374754d43d6267004123dd7688f63b7f3aa95831:illumidesk/templates/alb-rbac-role.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: alb-ingress-controller
  annotations:
<<<<<<< HEAD:illumidesk/templates/alb-rbac-role.yaml
    {{- range $key, $value := .Values.albIngressController.serviceAccount.annotations }}
=======
    {{- range $key, $value := .Values.alb_ingress_controller.service_account.annotations }}
>>>>>>> 374754d43d6267004123dd7688f63b7f3aa95831:illumidesk/templates/alb-rbac-role.yaml
      {{ $key }} : {{ $value }}
    {{- end }}
  name: alb-ingress-controller
  namespace: {{ .Release.Namespace }}
...
{{ end }}
{{ end }}